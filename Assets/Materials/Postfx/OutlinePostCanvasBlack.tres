[gd_resource type="ShaderMaterial" load_steps=2 format=3 uid="uid://hf1d7xaruviu"]

[sub_resource type="Shader" id="Shader_EdgeCanvas"]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform vec4 edge_color : source_color = vec4(1.0, 1.0, 1.0, 1.0);
uniform float strength : hint_range(0.0, 3.0, 0.01) = 1.0;
uniform float pixel_scale : hint_range(0.25, 3.0, 0.05) = 1.0;
uniform float luma_threshold : hint_range(0.0, 1.0, 0.01) = 0.10;

uniform sampler2D SCREEN_TEXTURE : hint_screen_texture, filter_linear_mipmap, repeat_disable;

float luminance(vec3 c) { return dot(c, vec3(0.299, 0.587, 0.114)); }

void fragment() {
    vec2 texel = vec2(1.0) / vec2(textureSize(SCREEN_TEXTURE, 0));
    vec2 s = texel * max(pixel_scale, 0.1);

    float l00 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-s.x, -s.y)).rgb);
    float l10 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2( 0.0, -s.y)).rgb);
    float l20 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2( s.x, -s.y)).rgb);
    float l01 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-s.x,  0.0)).rgb);
    float l21 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2( s.x,  0.0)).rgb);
    float l02 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2(-s.x,  s.y)).rgb);
    float l12 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2( 0.0,  s.y)).rgb);
    float l22 = luminance(texture(SCREEN_TEXTURE, SCREEN_UV + vec2( s.x,  s.y)).rgb);

    float gx = (l20 + 2.0*l21 + l22) - (l00 + 2.0*l01 + l02);
    float gy = (l02 + 2.0*l12 + l22) - (l00 + 2.0*l10 + l20);
    float edge_luma = length(vec2(gx, gy));

    float e = smoothstep(luma_threshold, luma_threshold*2.0, edge_luma);
    COLOR = vec4(edge_color.rgb * e * strength, e * edge_color.a);
}"

[resource]
shader = SubResource("Shader_EdgeCanvas")
shader_parameter/edge_color = Color(0.796317, 0.643329, 0.852551, 1)
shader_parameter/strength = 0.49
shader_parameter/pixel_scale = 0.35
shader_parameter/luma_threshold = 0.13
